- name: nfs server resource definition
  vars:
    k8s_kind: NFSServer
    k8s_state: "{{ server_state }}"
    template: "{{ server_template }}"
    metadata_name: "{{ server_appname }}"
  import_tasks: "{{ common_path }}/k8s/object.yml"

- name: save nfs server resource definition task
  set_fact:
    k8s_server: "{{ k8s_object_task }}"

- name: wait and add labels and annotations
  when:
    - "'absent' not in server_state"
    - not ansible_check_mode
  block:
    - name: wait for nfs server
      retries: 12
      until:
        - (server_wait_task.resources | first).status.state is defined
        - "'Running' in (server_wait_task.resources | first).status.state"
      k8s_info:
        api_version: nfs.rook.io/v1alpha1
        kind: NFSServer
        name: "{{ server_appname }}"
        namespace: "{{ meta_namespace }}"
      register: server_wait_task

    - name: add inventory label selector to nfs server
      when: k8s_server is changed
      k8s:
        definition:
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: "{{ server_appname }}"
            namespace: "{{ meta_namespace }}"
          spec:
            template:
              metadata:
                labels: "{{ { cr_group + '/inventory': inventory_uuid } }}"
                annotations: "{{ { cr_group + '/inventory-hostvars': inventory_annotation_hostvars |
                  to_json | indent(width=4) } }}"

    - name: add common labels to nfs server
      when:
        - k8s_server is changed
        - common_labels is defined and common_labels
      k8s:
        definition:
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: "{{ server_appname }}"
            namespace: "{{ meta_namespace }}"
          spec:
            template:
              metadata:
                labels: "{{ common_labels | from_yaml }}"

    - name: wait for nfs server sts
      retries: 6
      until:
        - (server_sts_wait_task.resources | first).status.readyReplicas is defined
        - (server_sts_wait_task.resources | first).status.readyReplicas > 0
      k8s_info:
        api_version: apps/v1
        kind: StatefulSet
        name: "{{ server_appname }}"
        namespace: "{{ meta_namespace }}"
      register: server_sts_wait_task

- name: refresh inventory fact
  when: k8s_server is changed
  set_fact:
    inventory_refresh_task: refresh

- name: refresh dynamic inventory
  include_tasks: "{{ common_path }}/inventory/{{ inventory_refresh_task }}.yml"

- name: set ownership/permissions of export folder
  when:
    - server_container_group in groups
    - groups[server_container_group] | length > 0
    - groups[server_container_group][0] in groups[pods_ready_group]
  delegate_to: "{{ groups[server_container_group][0] }}"
  run_once: true
  block:
    - name: set ownership/permission of export folder
      register: server_export_owner_permissions_task
      when: server_export_permissions is defined or
        server_export_userid is defined or
        server_export_groupid is defined
      file:
        path: "/{{ server_pvc }}"
        state: directory
        mode: "{{ server_export_permissions | default(omit) }}"
        owner: "{{ server_export_userid | default(omit) }}"
        group: "{{ server_export_groupid | default(omit) }}"
